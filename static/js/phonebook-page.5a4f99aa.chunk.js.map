{"version":3,"sources":["components/Form/Form.module.css","components/Filter/Filter.module.css","components/Contact/Contact.module.css","components/ContactsList/ContactsList.module.css","pages/Phonebook/Phonebook.module.css","redux/phonebook/phonebook-selectors.js","components/Form/Form.jsx","components/Filter/Filter.jsx","components/Contact/Contact.jsx","components/ContactsList/ContactsList.jsx","pages/Phonebook/Phonebook.js"],"names":["module","exports","getContacts","state","contacts","getFilter","filter","getFilteredContacts","createSelector","name","toLowerCase","includes","ContactForm","useState","setName","number","setNumber","useSelector","dispatch","useDispatch","handleChange","e","target","value","resetForm","className","s","container","onSubmit","preventDefault","some","element","alert","contactsOperations","addContact","toast","success","position","autoClose","form","label","input","type","pattern","title","required","onChange","Filter","text","changeFilter","currentTarget","Contact","propType","PropTypes","string","isRequired","ContactsList","list","map","id","item","button","onClick","deleteContact","handleDeleteContact","Phonebook","useEffect","fetchContacts","Form","length","contactTitle"],"mappings":"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","file":"static/js/phonebook-page.5a4f99aa.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__1wGl0\",\"label\":\"Form_label__p2yYf\",\"input\":\"Form_input__nlR9s\",\"button\":\"Form_button__2Vzd0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Filter_title__TEB4E\",\"text\":\"Filter_text__3ootr\",\"value\":\"Filter_value__1ioEX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"name\":\"Contact_name__Jw7Hg\",\"number\":\"Contact_number__T3eVr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactsList_list__3Yy6a\",\"item\":\"ContactsList_item__2A9NP\",\"button\":\"ContactsList_button__1PF6o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Phonebook_title__1RftD\",\"contactTitle\":\"Phonebook_contactTitle__3dkYB\"};","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nexport const getContacts = state => state.contacts.contacts;\r\nexport const getFilter = state => state.contacts.filter;\r\n\r\nexport const getFilteredContacts = createSelector(\r\n  [getContacts, getFilter],\r\n  (contacts, filter) =>\r\n    contacts.filter(({ name }) =>\r\n      name.toLowerCase().includes(filter.toLowerCase()),\r\n    ),\r\n);","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getContacts } from '../../redux/phonebook/phonebook-selectors';\nimport  { contactsOperations } from '../../redux/phonebook';\nimport { toast } from 'react-toastify';\nimport { BtnAdd } from '../Button/Button';\n\nimport s from './Form.module.css';\n\nfunction ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmint = e => {\n    e.preventDefault();\n    const comparableElement = contacts.some(\n      element => element.name.toLowerCase() === name.toLowerCase(),\n    );\n    if (comparableElement) {\n      resetForm();\n      return alert(`${name} is already in the directory`);\n    }\n    dispatch(contactsOperations.addContact({ name, number }));\n    toast.success('Contact added to the phonebook!', {\n      position: 'top-center',\n      autoClose: 2500,\n    });\n    resetForm();\n  };\n\n  const resetForm = () => {\n    setName('');\n    setNumber('');\n  };\n\n\n  return (\n    <div className={s.container}>\n      <form onSubmit={handleSubmint} className={s.form}>\n        <h3 className={s.label}>Name</h3>\n        <label >\n          <input\n            className={s.input}\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            onChange={handleChange}\n          />\n        </label>\n        <h3 className={s.label}>Phone number</h3>\n        <label >\n          <input\n            className={s.input}\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            onChange={handleChange}\n          />\n        </label>\n        <BtnAdd/>\n      </form>\n    </div>\n  );\n}\n\n\nexport default ContactForm;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { getFilter } from '../../redux/phonebook/phonebook-selectors';\nimport { changeFilter } from '../../redux/phonebook/phonebook-slice';\n\nimport PropTypes from 'prop-types';\nimport s from './Filter.module.css';\n\nconst Filter = () => {\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n  const onChange = e => {\n    dispatch(changeFilter(e.currentTarget.value));\n  };\n  \n  return (\n    <div className={s.text}>\n      <h3 className={s.title}>Finde contacts by name</h3>\n      <label>\n        <input\n          className={s.value}\n          type=\"text\"\n          name=\"filter\"\n          value={filter}\n          onChange={onChange} />\n      </label>\n    </div>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n\nexport default Filter;\n","import PropTypes from 'prop-types';\r\nimport s from './Contact.module.css';\r\n\r\nexport default function Contact({ name, number }) {\r\n  return (\r\n    <>\r\n      <span className={s.name}>{name}:</span>\r\n      <span className={s.number}>{number}</span>\r\n    </>\r\n  );\r\n}\r\n\r\nContact.propType = {\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.number.isRequired,\r\n};","import { toast } from 'react-toastify';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getFilteredContacts } from '../../redux/phonebook/phonebook-selectors';\nimport { contactsOperations } from '../../redux/phonebook';\nimport Contact from '../Contact/Contact';\nimport s from './ContactsList.module.css';\n\nexport default function ContactsList() {\n  const contacts = useSelector(getFilteredContacts);\n  const dispatch = useDispatch();\n  \n  const handleDeleteContact = id => {\n    dispatch(contactsOperations.deleteContact(id));\n    toast.success('Contact deleted!', {\n      position: 'top-center',\n      autoClose: 2500,\n    });\n  };\n\n  return (\n    <ul className={s.list}>\n      {contacts.map(({ name, number, id }) => (\n        <li className={s.item} key={id}>\n          <Contact name={name} number={number} />\n          <button\n            className={s.button}\n            type=\"button\"\n            onClick={() => handleDeleteContact(id)}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n","import { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getContacts } from '../../redux/phonebook/phonebook-selectors';\r\nimport { fetchContacts } from '../../redux/phonebook/phonebook-operations';\r\nimport Form from '../../components/Form/Form';\r\nimport Filter from '../../components/Filter/Filter';\r\nimport ContactList from '../../components/ContactsList/ContactsList';\r\nimport s from './Phonebook.module.css';\r\n\r\nexport default function Phonebook() {\r\n  const contacts = useSelector(getContacts);\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(fetchContacts());\r\n  }, [dispatch]);\r\n  return (\r\n    <>\r\n      <h2 className={s.title}>Phonebook</h2>\r\n      <Form />\r\n\r\n      {contacts.length > 0 && (\r\n        <>\r\n          <Filter />\r\n          <h3 className={s.contactTitle}>Contacts</h3>\r\n          <ContactList />\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n}"],"sourceRoot":""}